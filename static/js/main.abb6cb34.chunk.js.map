{"version":3,"sources":["components/Game/Card/Card.js","components/Game/Game.js","images/elephant.jpg","images/rhinoceros.jpg","images/giraffe.jpg","images/tiger.jpg","images/lion.jpg","images/hippopotamus.jpg","images/zebra.jpg","images/cheetah.jpg","images/gorilla.jpg","images/buffalo.jpg","images/antelope.jpg","images/meerkat.jpg","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","onClick","handleCardClick","data-name","name","src","alt","Game","cardsArray","animals","map","animal","App","animalsInitial","elephant","rhinoceros","giraffe","tiger","lion","hippopotamus","zebra","cheetah","gorilla","buffalo","antelope","meerkat","useState","setAnimals","winner","setWinner","score","setScore","bestScore","setBestScore","clicked","setClicked","useEffect","newAnimals","shuffleArray","array","i","length","j","Math","floor","random","e","currentTarget","getAttribute","includes","console","log","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb6cb34.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\" onClick={props.handleCardClick} data-name={props.name}>\n      <div>\n        <img src={props.src} alt={props.name} />\n      </div>\n      <p>{props.name}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card/Card\";\nimport \"./Game.css\";\n\nconst Game = (props) => {\n  // Create list set of animal cards\n  const cardsArray = props.animals.map((animal) => {\n    return (\n      <Card\n        key={animal.name}\n        handleCardClick={props.handleCardClick}\n        src={animal.src}\n        name={animal.name}\n      />\n    );\n  });\n\n  return <div className=\"container\">{cardsArray}</div>;\n};\n\nexport default Game;\n","export default __webpack_public_path__ + \"static/media/elephant.7fb0ff20.jpg\";","export default __webpack_public_path__ + \"static/media/rhinoceros.dd1f1c17.jpg\";","export default __webpack_public_path__ + \"static/media/giraffe.15c708c1.jpg\";","export default __webpack_public_path__ + \"static/media/tiger.e4bdc674.jpg\";","export default __webpack_public_path__ + \"static/media/lion.8522e6f9.jpg\";","export default __webpack_public_path__ + \"static/media/hippopotamus.7f0a6498.jpg\";","export default __webpack_public_path__ + \"static/media/zebra.f9579c1e.jpg\";","export default __webpack_public_path__ + \"static/media/cheetah.9240922e.jpg\";","export default __webpack_public_path__ + \"static/media/gorilla.e751dfac.jpg\";","export default __webpack_public_path__ + \"static/media/buffalo.7b5ef74a.jpg\";","export default __webpack_public_path__ + \"static/media/antelope.39aa2729.jpg\";","export default __webpack_public_path__ + \"static/media/meerkat.901c8af8.jpg\";","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport Game from \"./components/Game/Game\";\nimport elephant from \"./images/elephant.jpg\";\nimport rhinoceros from \"./images/rhinoceros.jpg\";\nimport giraffe from \"./images/giraffe.jpg\";\nimport tiger from \"./images/tiger.jpg\";\nimport lion from \"./images/lion.jpg\";\nimport hippopotamus from \"./images/hippopotamus.jpg\";\nimport zebra from \"./images/zebra.jpg\";\nimport cheetah from \"./images/cheetah.jpg\";\nimport gorilla from \"./images/gorilla.jpg\";\nimport buffalo from \"./images/buffalo.jpg\";\nimport antelope from \"./images/antelope.jpg\";\nimport meerkat from \"./images/meerkat.jpg\";\n\nconst App = () => {\n  const animalsInitial = [\n    {\n      name: \"Elephant\",\n      src: elephant,\n    },\n    {\n      name: \"Rhinoceros\",\n      src: rhinoceros,\n    },\n    {\n      name: \"Giraffe\",\n      src: giraffe,\n    },\n    {\n      name: \"Tiger\",\n      src: tiger,\n    },\n    {\n      name: \"Lion\",\n      src: lion,\n    },\n    {\n      name: \"Hippopotamus\",\n      src: hippopotamus,\n    },\n    {\n      name: \"Zebra\",\n      src: zebra,\n    },\n    {\n      name: \"Cheetah\",\n      src: cheetah,\n    },\n    {\n      name: \"Gorilla\",\n      src: gorilla,\n    },\n    {\n      name: \"Buffalo\",\n      src: buffalo,\n    },\n    {\n      name: \"Antelope\",\n      src: antelope,\n    },\n    {\n      name: \"Meerkat\",\n      src: meerkat,\n    },\n  ];\n\n  const [animals, setAnimals] = useState(animalsInitial);\n\n  // Winner State\n  const [winner, setWinner] = useState(false);\n\n  // Scores saved\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  // Which has been clicked\n  const [clicked, setClicked] = useState([]);\n\n  const handleCardClick = (e) => {\n    const name = e.currentTarget.getAttribute(\"data-name\");\n\n    // Add to already clicked array if not in it\n    if (!clicked.includes(name)) {\n      setWinner(false);\n      setClicked([...clicked, name]);\n      setScore(score + 1);\n\n      // Update best score if necessary\n      if (score + 1 > bestScore) {\n        setBestScore(score + 1);\n      }\n\n      // Winner\n      if (score + 1 === 12) {\n        console.log(\"You Win\");\n        setWinner(true);\n        setClicked([]);\n        setTimeout(() => {\n          setWinner(false);\n        }, 3000);\n\n        setScore(0);\n      }\n\n      // Reset game if already clicked\n    } else {\n      if (score !== 12) {\n        console.log(\"You Lose\");\n      } else {\n      }\n      setScore(0);\n      setClicked([]);\n    }\n\n    // Shuffle array\n    const newAnimals = [...animals];\n    shuffleArray(newAnimals);\n    setAnimals(newAnimals);\n  };\n\n  // Shuffle on mount\n  useEffect(() => {\n    const newAnimals = [...animals];\n    shuffleArray(newAnimals);\n    setAnimals(newAnimals);\n  }, []);\n\n  // Shuffle function from internet\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {winner ? <h1 className=\"winner\">You Win</h1> : null}\n      <header className=\"header\">\n        <h1>Animal Memory Game</h1>\n        <div>\n          <span>\n            Score: {score} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Best:{\" \"}\n            {bestScore}\n          </span>\n        </div>\n      </header>\n      <Game handleCardClick={(e) => handleCardClick(e)} animals={animals} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}